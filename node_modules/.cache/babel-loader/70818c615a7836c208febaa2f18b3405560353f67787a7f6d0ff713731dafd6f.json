{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Desktop/wedding1/src/components/YandexMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YandexMap = ({\n  location\n}) => {\n  _s();\n  useEffect(() => {\n    // Инициализация карты после загрузки API и компонента\n    const initMap = () => {\n      if (!window.ymaps) return;\n      window.ymaps.ready(() => {\n        const map = new window.ymaps.Map(\"map\", {\n          center: [41.2995, 69.2401],\n          // Центр карты по умолчанию (Ташкент)\n          zoom: 10\n        });\n        if (location) {\n          window.ymaps.geocode(location, {\n            results: 1\n          }).then(function (res) {\n            const firstGeoObject = res.geoObjects.get(0);\n            const bounds = firstGeoObject.properties.get('boundedBy');\n            map.geoObjects.add(firstGeoObject);\n            map.setBounds(bounds, {\n              checkZoomRange: true\n            });\n          });\n        }\n      });\n    };\n    initMap();\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(YandexMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = YandexMap;\nexport default YandexMap;\nvar _c;\n$RefreshReg$(_c, \"YandexMap\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","YandexMap","location","_s","initMap","window","ymaps","ready","map","Map","center","zoom","geocode","results","then","res","firstGeoObject","geoObjects","get","bounds","properties","add","setBounds","checkZoomRange","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oila/Desktop/wedding1/src/components/YandexMap.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst YandexMap = ({ location }) => {\n  useEffect(() => {\n    // Инициализация карты после загрузки API и компонента\n    const initMap = () => {\n      if (!window.ymaps) return;\n      window.ymaps.ready(() => {\n        const map = new window.ymaps.Map(\"map\", {\n          center: [41.2995, 69.2401], // Центр карты по умолчанию (Ташкент)\n          zoom: 10\n        });\n\n        if (location) {\n          window.ymaps.geocode(location, { results: 1 }).then(function (res) {\n            const firstGeoObject = res.geoObjects.get(0);\n            const bounds = firstGeoObject.properties.get('boundedBy');\n            map.geoObjects.add(firstGeoObject);\n            map.setBounds(bounds, {\n              checkZoomRange: true\n            });\n          });\n        }\n      });\n    };\n\n    initMap();\n  }, [location]);\n\n  return <div id=\"map\" style={{ width: \"100%\", height: \"400px\" }}></div>;\n};\n\nexport default YandexMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClCL,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAI,CAACC,MAAM,CAACC,KAAK,EAAE;MACnBD,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC,MAAM;QACvB,MAAMC,GAAG,GAAG,IAAIH,MAAM,CAACC,KAAK,CAACG,GAAG,CAAC,KAAK,EAAE;UACtCC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;UAAE;UAC5BC,IAAI,EAAE;QACR,CAAC,CAAC;QAEF,IAAIT,QAAQ,EAAE;UACZG,MAAM,CAACC,KAAK,CAACM,OAAO,CAACV,QAAQ,EAAE;YAAEW,OAAO,EAAE;UAAE,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,GAAG,EAAE;YACjE,MAAMC,cAAc,GAAGD,GAAG,CAACE,UAAU,CAACC,GAAG,CAAC,CAAC,CAAC;YAC5C,MAAMC,MAAM,GAAGH,cAAc,CAACI,UAAU,CAACF,GAAG,CAAC,WAAW,CAAC;YACzDV,GAAG,CAACS,UAAU,CAACI,GAAG,CAACL,cAAc,CAAC;YAClCR,GAAG,CAACc,SAAS,CAACH,MAAM,EAAE;cACpBI,cAAc,EAAE;YAClB,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IAEDnB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBAAOF,OAAA;IAAKwB,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxE,CAAC;AAAC5B,EAAA,CA5BIF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}