{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Desktop/wedding1/src/components/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Modal.css';\nimport SoundIcon from '../path/to/sound-icon.svg'; // Добавьте путь к значку звука\nimport MuteIcon from '../path/to/mute-icon.svg'; // Добавьте путь к значку мьюта\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  showModal,\n  handleClose,\n  children,\n  musicSrc\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isMuted, setIsMuted] = useState(false);\n  useEffect(() => {\n    if (showModal && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [showModal]);\n  const toggleMute = () => {\n    if (audioRef.current) {\n      audioRef.current.muted = !audioRef.current.muted;\n      setIsMuted(!isMuted);\n    }\n  };\n  const handleOverlayClick = event => {\n    if (event.target.className.includes('modal-overlay')) {\n      handleClose();\n    }\n  };\n  return showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: isMuted ? MuteIcon : SoundIcon,\n        className: \"mute-icon\",\n        onClick: toggleMute,\n        alt: \"Sound Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), children, /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: musicSrc,\n        loop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(Modal, \"nHDirW+aLtU3y2IlV3S0pmXv+bA=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","SoundIcon","MuteIcon","jsxDEV","_jsxDEV","Modal","showModal","handleClose","children","musicSrc","_s","audioRef","isMuted","setIsMuted","current","play","toggleMute","muted","handleOverlayClick","event","target","className","includes","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","loop","_c","$RefreshReg$"],"sources":["/Users/oila/Desktop/wedding1/src/components/Modal.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Modal.css';\nimport SoundIcon from '../path/to/sound-icon.svg';  // Добавьте путь к значку звука\nimport MuteIcon from '../path/to/mute-icon.svg';    // Добавьте путь к значку мьюта\n\nconst Modal = ({ showModal, handleClose, children, musicSrc }) => {\n  const audioRef = useRef(null);\n  const [isMuted, setIsMuted] = useState(false);\n\n  useEffect(() => {\n    if (showModal && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [showModal]);\n\n  const toggleMute = () => {\n    if (audioRef.current) {\n      audioRef.current.muted = !audioRef.current.muted;\n      setIsMuted(!isMuted);\n    }\n  };\n\n  const handleOverlayClick = (event) => {\n    if (event.target.className.includes('modal-overlay')) {\n      handleClose();\n    }\n  };\n\n  return (\n    showModal && (\n      <div className=\"modal-overlay\" onClick={handleOverlayClick}>\n        <div className=\"modal-content\">\n          <img\n            src={isMuted ? MuteIcon : SoundIcon}\n            className=\"mute-icon\"\n            onClick={toggleMute}\n            alt=\"Sound Control\"\n          />\n          {children}\n          <audio ref={audioRef} src={musicSrc} loop />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default Modal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,aAAa;AACpB,OAAOC,SAAS,MAAM,2BAA2B,CAAC,CAAE;AACpD,OAAOC,QAAQ,MAAM,0BAA0B,CAAC,CAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,KAAK,GAAGA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7CF,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,IAAIK,QAAQ,CAACG,OAAO,EAAE;MACjCH,QAAQ,CAACG,OAAO,CAACC,IAAI,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACT,SAAS,CAAC,CAAC;EAEf,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIL,QAAQ,CAACG,OAAO,EAAE;MACpBH,QAAQ,CAACG,OAAO,CAACG,KAAK,GAAG,CAACN,QAAQ,CAACG,OAAO,CAACG,KAAK;MAChDJ,UAAU,CAAC,CAACD,OAAO,CAAC;IACtB;EACF,CAAC;EAED,MAAMM,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;MACpDf,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,OACED,SAAS,iBACPF,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAACE,OAAO,EAAEL,kBAAmB;IAAAV,QAAA,eACzDJ,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAb,QAAA,gBAC5BJ,OAAA;QACEoB,GAAG,EAAEZ,OAAO,GAAGV,QAAQ,GAAGD,SAAU;QACpCoB,SAAS,EAAC,WAAW;QACrBE,OAAO,EAAEP,UAAW;QACpBS,GAAG,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,EACDrB,QAAQ,eACTJ,OAAA;QAAO0B,GAAG,EAAEnB,QAAS;QAACa,GAAG,EAAEf,QAAS;QAACsB,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;AAEL,CAAC;AAACnB,EAAA,CAvCIL,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}